Object subclass: #SplitMix64Random	instanceVariableNames: 'seed'	classVariableNames: ''	poolDictionaries: ''	category: 'SplitMix64'!!SplitMix64Random commentStamp: 'BenoitStJean 10/24/2019 21:11' prior: 0!This is an implementation of the SplitMix64 pseudo-random number generator. It is very fast,  has a period of 2^64 and passes the Big Crush (160 tests)).Originally created by Sebasto Vigna, SplitMix64 is based on  SplittableRandom in Java 8.Useful references : http://xorshift.di.unimi.it/splitmix64.chttps://docs.oracle.com/javase/8/docs/api/java/util/SplittableRandom.htmlhttps://github.com/lemire/testingRNG!!SplitMix64Random methodsFor: 'enumerating' stamp: 'BenoitStJean 10/24/2019 03:27'!next	| nextInteger |		seed := (seed + 16r9e3779b97f4a7c15) bitAnd: self mask64Bits.	nextInteger := seed.	nextInteger := ((nextInteger bitXor: (nextInteger >> 30)) * 16rbf58476d1ce4e5b9) bitAnd: self mask64Bits.	nextInteger := ((nextInteger bitXor: (nextInteger >> 27)) * 16r94d049bb133111eb) bitAnd: self mask64Bits.	nextInteger := nextInteger bitXor: (nextInteger >> 31).	^nextInteger! !!SplitMix64Random methodsFor: 'private' stamp: 'BenoitStJean 10/24/2019 03:27'!privateSetSeed: anInteger	seed := anInteger! !!SplitMix64Random methodsFor: 'accessing-constants' stamp: 'BenoitStJean 10/24/2019 03:27'!mask64Bits	^self class mask64Bits! !!SplitMix64Random methodsFor: 'initialize-release' stamp: 'BenoitStJean 10/24/2019 03:27'!initialize		seed := ((Random new) nextInt: self mask64Bits) bitXor: self hash. 	! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!SplitMix64Random class	instanceVariableNames: ''!!SplitMix64Random class methodsFor: 'accessing-constants' stamp: 'BenoitStJean 10/24/2019 03:27'!mask64Bits	^16rffffffffffffffff! !!SplitMix64Random class methodsFor: 'instance-creation' stamp: 'BenoitStJean 10/24/2019 03:29'!seed: aSeedInteger	^self basicNew privateSetSeed: aSeedInteger ! !!SplitMix64Random class methodsFor: 'instance-creation' stamp: 'BenoitStJean 10/24/2019 03:28'!new	^self basicNew initialize! !TestCase subclass: #SplitMix64RandomTest	instanceVariableNames: 'seed expectedValues'	classVariableNames: ''	poolDictionaries: ''	category: 'SplitMix64'!!SplitMix64RandomTest commentStamp: 'BenoitStJean 10/24/2019 21:09' prior: 0!Tests the SplitMix64Random with values based on the following reference implementation: http://xoshiro.di.unimi.it/splitmix64.c!!SplitMix64RandomTest methodsFor: 'running' stamp: 'BenoitStJean 10/24/2019 21:10'!setUp	"See class comment for explanation on these values"	seed := 1477776061723855037.	expectedValues := #(	1985237415132408290 2979275885539914483 13511426838097143398 8488337342461049707 								15141737807933549159 17093170987380407015 16389528042912955399 13177319091862933652 								10841969400225389492 17094824097954834098 3336622647361835228 9678412372263018368 								11111587619974030187 7882215801036322410 5709234165213761869 7799681907651786826 								4616320717312661886 4251077652075509767 7836757050122171900 5054003328188417616 								12919285918354108358 16477564761813870717 5124667218451240549 18099554314556827626 								7603784838804469118 6358551455431362471 3037176434532249502 3217550417701719149 								9958699920490216947 5965803675992506258 12000828378049868312 12720568162811471118 								245696019213873792 8351371993958923852 14378754021282935786 5655432093647472106 								5508031680350692005 8515198786865082103 6287793597487164412 14963046237722101617 								3630795823534910476 8422285279403485710 10554287778700714153 10871906555720704584 								8659066966120258468 9420238805069527062 10338115333623340156 13514802760105037173 								14635952304031724449 15419692541594102413).! !!SplitMix64RandomTest methodsFor: 'tests' stamp: 'BenoitStJean 10/24/2019 03:28'!testExpectedValues	| rng |	rng := SplitMix64Random seed: 1477776061723855037.	expectedValues do: [ :v | self assert: v equals: rng next ].! !